{"version":3,"sources":["components/Nav.js","apis/matchmaking_api.js","components/Button.js","components/Header.js","pages/Home.js","apis/user_api.js","pages/Users.js","apis/game_api.js","pages/Games.js","pages/Matchmakings.js","App.js","index.js"],"names":["Nav","exact","to","useSessions","useState","loading","setLoading","sessions","setSessions","error","setError","useEffect","fetch","BASE_URL","then","res","console","log","json","catch","e","Button","className","children","onClick","props","Header","host","setHost","game","setGame","start_time","setTime","session_location","setLocation","max_playercount","setMaxPlayers","rsvp_by","setRSVP","notes","setNotes","type","name","value","onChange","event","target","rows","cols","session","players","method","headers","body","JSON","stringify","window","location","reload","alert","createSession","Home","useUsers","users","setUsers","Users","message","map","user","User","key","id","profile_name","real_name","join_date","lives_in","trigger","useGames","games","setGames","Games","Game","min_playercount","like_count","dislike_count","Sessions","App","path","display","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ac2882e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Nav() {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<NavLink exact to=\"/\">\r\n\t\t\t\tHome\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink to=\"/users\">Users</NavLink>\r\n\t\t\t<NavLink to=\"/games\">Games</NavLink>\r\n\t\t\t<NavLink to=\"/sessions\">Sessions</NavLink>\r\n\t\t</nav>\r\n\t);\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// TODO - update this to be your url\r\nconst BASE_URL = \"https://dungeons-and-ladders.herokuapp.com\";\r\n\r\nfunction getAllSessions() {\r\n\tconst endpoint = BASE_URL + `/sessions`;\r\n\t\r\n\t\r\n\treturn fetch(endpoint).then(res => {\r\n\t\tconsole.log(res);\r\n\t\treturn res.json();\r\n\t});\r\n}\r\n\r\n\r\nexport function createSession(session) {\r\n\tconst { host, start_time, session_location, game, max_playercount, rsvp_by, notes, players } = session;\r\n\tif (!host || !start_time || !session_location || !game || !rsvp_by) {\r\n\t\talert(\"must include key fields\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst endpoint = BASE_URL + `/sessions/`;\r\n\r\n\t// TODO\r\n\t// return fetch statement to add an author\r\n\treturn fetch(endpoint, { \r\n\t\tmethod: \"POST\", \r\n\t\theaders: { \r\n\t\t  \"Content-Type\": \"application/json\" \r\n\t\t}, \r\n\t\tbody: JSON.stringify({ \r\n\t\t  host,\r\n\t\t  start_time,\r\n\t\t  session_location,\r\n\t\t  game,\r\n\t\t  max_playercount,\r\n\t\t  rsvp_by,\r\n\t\t  notes,\r\n\t\t  players\r\n\t\t}) \r\n\t}).then(res => window.location.reload()); \t\r\n}\r\n\r\nexport function editSession(session) {\r\n\tconst { id, host, start_time, session_location, game, max_playercount, rsvp_by, notes, players } = session;\r\n\t\r\n\tif (!id) {\r\n\t\talert(\"must include an id\");\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (!host) {\r\n\t\talert(\"must include a host\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!start_time || !rsvp_by) {\r\n\t\talert(\"must include a session start time and rsvp date\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!session_location) {\r\n\t\talert(\"must include a session venue\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!game) {\r\n\t\talert(\"must include a game\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst endpoint = BASE_URL + `/sessions/${id}`;\r\n\r\n\t// return fetch query to update an author\r\n\treturn fetch(endpoint, { \r\n\t\tmethod: \"PUT\", \r\n\t\theaders: { \r\n\t\t  \"Content-Type\": \"application/json\" \r\n\t\t}, \r\n\t\tbody: JSON.stringify({ \r\n\t\t  host,\r\n\t\t  start_time,\r\n\t\t  session_location,\r\n\t\t  game,\r\n\t\t  max_playercount,\r\n\t\t  rsvp_by,\r\n\t\t  notes,\r\n\t\t  players\r\n\t\t}) \r\n\t}).then(res => window.location.reload()); \t\r\n}\r\n\r\nexport function joinSession(id, user) {\r\n\tconst username = user;\r\n\r\n\tif (!username) {\r\n\t\talert(\"must include a username\");\r\n\t}\r\n\t\r\n\tconst endpoint = BASE_URL + `/sessions/${id}/join/${username}`;\r\n\t\r\n\treturn fetch(endpoint, { \r\n\t\tmethod: \"PUT\", \r\n\t}).then(res => window.location.reload()); \r\n}\r\n\r\nexport function cancelSession(id) {\r\n\tconst endpoint = BASE_URL + `/sessions/${id}`;\r\n\r\n\treturn fetch(endpoint, { \r\n\t\tmethod: \"DELETE\", \r\n\t}).then(res => window.location.reload()); \r\n}\r\n\r\nexport function useSessions() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [sessions, setSessions] = useState([]);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\tgetAllSessions()\r\n\t  .then(sessions => {\r\n\t\tsetSessions(sessions);\r\n\t\tsetLoading(false);\r\n\t  })\r\n\t  .catch(e => {\r\n\t\tconsole.log(e);\r\n\t\tsetError(e);\r\n\t\tsetLoading(false);\r\n\t  });\r\n\t}, []);\r\n\r\n\treturn {\r\n\tloading,\r\n\tsessions,\r\n\terror\r\n\t};\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Button({ className, children, onClick, ...props }) {\r\n  return (\r\n    <div className={`btn ${className}`} onClick={onClick} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { createSession } from \"../apis/matchmaking_api\";\r\nimport Button from \"../components/Button\";\r\n\r\nexport default function Header() {\r\n  const [host, setHost] = useState(\"\");\r\n  const [game, setGame] = useState(\"\");\r\n  const [start_time, setTime] = useState(\"\");\r\n  const [session_location, setLocation] = useState(\"\");\r\n  const [max_playercount, setMaxPlayers] = useState(\"\");\r\n  const [rsvp_by, setRSVP] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  function onSubmit() {\r\n    createSession({\r\n       host,\r\n\t   game,\r\n\t   start_time,\r\n\t   session_location,\r\n\t   max_playercount,\r\n\t   rsvp_by,\r\n\t   notes,\r\n\t   players: []\r\n     });\r\n  }\r\n\r\n  return (\r\n    <div className=\"createSession\">\r\n      Create a Boardgame Session\r\n      <form>\r\n        Host username: <input\r\n          type=\"text\"\r\n          name=\"host\"\r\n          value={host}\r\n          onChange={event => {\r\n             setHost(event.target.value);\r\n          }}\r\n        /><br />\r\n        Game:<input\r\n          type=\"text\"\r\n          name=\"game\"\r\n          value={game}\r\n          onChange={event => {\r\n             setGame(event.target.value);\r\n          }}\r\n        />\r\n\t\tMax players: <input\r\n          type=\"number\"\r\n          name=\"max_playercount\"\r\n          value={max_playercount}\r\n          onChange={event => {\r\n             setMaxPlayers(event.target.value);\r\n          }}\r\n        /><br />\r\n        Scheduled date and time: <input\r\n          type=\"datetime-local\"\r\n          name=\"start_time\"\r\n          value={start_time}\r\n          onChange={event => {\r\n             setTime(event.target.value);\r\n          }}\r\n        /><br />\r\n\t\tVenue: <input\r\n          type=\"text\"\r\n          name=\"session_location\"\r\n          value={session_location}\r\n          onChange={event => {\r\n             setLocation(event.target.value);\r\n          }}\r\n        /><br />\r\n\t\tRSVP-by: <input\r\n          type=\"datetime-local\"\r\n          name=\"rsvp_by\"\r\n          value={rsvp_by}\r\n          onChange={event => {\r\n             setRSVP(event.target.value);\r\n          }}\r\n        /><br />\r\n\t\tAdditional notes:<br /> <textarea\r\n          name=\"notes\"\r\n\t\t  rows=\"5\" \r\n\t\t  cols=\"33\"\r\n          value={notes}\r\n          onChange={event => {\r\n             setNotes(event.target.value);\r\n          }}\r\n\t\t></textarea><br />\r\n        <Button className={\"btn-success\"} onClick={onSubmit}>\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <h1>Dungeons and Ladders</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// TODO - update this to be your url\r\nconst BASE_URL = \"https://dungeons-and-ladders.herokuapp.com\";\r\n\r\nfunction getUsers() {\r\n  const endpoint = BASE_URL + `/users`;\r\n\r\n\treturn fetch(endpoint).then(res => {\r\n\t\tconsole.log(res);\r\n\t\treturn res.json();\r\n\t});\r\n}\r\n\r\nexport function useUsers() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n      .then(users => {\r\n        setUsers(users);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        setError(e);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    users,\r\n    error\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useUsers } from \"../apis/user_api\";\r\nimport Collapsible from 'react-collapsible';\r\n\r\nimport Button from \"../components/Button\";\r\n\r\nexport default function Users() {\r\n  const { loading, users, error } = useUsers();\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (error) {\r\n    return <p>Something went wrong: {error.message}</p>;\r\n  }\r\n\r\n  // use this to make sure you are getting the right data\r\n  console.log(users);\r\n\r\n  // Display a list of the users\r\n  return (\r\n\t<div>\r\n\t\t<h1>All Users</h1>\r\n\t\t{users.map(user => (\r\n\t\t\t<User key={user.id} {...user} />\r\n\t\t))}\r\n\t</div>\r\n  );\r\n}\r\n\r\nfunction User(user) {\r\n  const { id, profile_name, real_name, join_date, lives_in } = user;\r\n\r\n  return (\r\n    <div className={`user user-${id}`} key={id}>\r\n      <div className=\"info\">\r\n\t\t<Collapsible trigger={profile_name}>\r\n\t\t\t<p>Real name: {real_name}</p>\r\n\t\t\t<p>Location: {lives_in}</p>\r\n\t\t\t<p>Joined: {join_date}</p>\r\n\t\t</Collapsible>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// TODO - update this to be your url\r\nconst BASE_URL = \"https://dungeons-and-ladders.herokuapp.com\";\r\n\r\nfunction getAllGames() {\r\n\tconst endpoint = BASE_URL + `/games`;\r\n\t\r\n\treturn fetch(endpoint).then(res => {\r\n\t\tconsole.log(res);\r\n\t\treturn res.json();\r\n\t});\r\n}\r\n\r\n\r\nexport function useGames() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [games, setGames] = useState([]);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\tgetAllGames()\r\n\t\t.then(games => {\r\n\t\t\tsetGames(games);\r\n\t\t\tsetLoading(false);\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsetError(e);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\tgames,\r\n\t\terror\r\n\t};\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useGames } from \"../apis/game_api\";\r\nimport Collapsible from 'react-collapsible';\r\n\r\nexport default function Games() {\r\n  const { loading, games, error } = useGames();\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (error) {\r\n    return <p>Something went wrong: {error.message}</p>;\r\n  }\r\n\r\n  console.log(games);\r\n\r\n  return (\r\n\t<div>\r\n\t\t<h1>All Games</h1>\r\n\t\t{games.map(game => (\r\n\t\t\t<Game key={game.id} {...game} />\r\n\t\t))}\r\n\t</div>\r\n  );\r\n}\r\n\r\nfunction Game(game) {\r\n\tconst { id, name, min_playercount, max_playercount, like_count, dislike_count } = game;\r\n\r\n\treturn (\r\n\t\t<div className={`game game-${id}`} key={id}>\r\n\t\t  <div className=\"info\">\r\n\t\t\t<Collapsible trigger={name}>\r\n\t\t\t\t<p>Recommended number of players: {min_playercount} - {max_playercount}</p>\r\n\t\t\t\t<p>{like_count} likes, {dislike_count} dislikes</p>\r\n\t\t\t</Collapsible>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSessions, editSession, joinSession, cancelSession } from \"../apis/matchmaking_api\";\r\nimport Collapsible from 'react-collapsible';\r\n\r\nimport Button from \"../components/Button\";\r\n\r\nexport default function Sessions() {\r\n  const { loading, sessions, error } = useSessions();\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (error) {\r\n    return <p>Something went wrong: {error.message}</p>;\r\n  }\r\n\r\n  // use this to make sure you are getting the right data\r\n  console.log(sessions);\r\n\r\n  // Display a list of the sessions\r\n  return null;\r\n}\r\n\r\nfunction Session(session) {\r\n  const { id, host, game, start_time, session_location, max_playercount, rsvp_by, notes, players } = session;\r\n  const [showJoin, setShowJoin] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n\r\n  return (\r\n    <div className={`session session-${id}`} key={id}>\r\n      <div className=\"info\">\r\n        <Collapsible trigger=\"{game} | {start_time} | {session_location}\">\r\n\t\t\t<p>Host: {host}</p>\r\n\t\t\t<p>Game: {game}</p>\r\n\t\t\t<p>Scheduled time: {start_time}</p>\r\n\t\t\t<p>Venue: {session_location}</p>\r\n\t\t\t<p>Max players: {max_playercount}</p>\r\n\t\t\t<p>RSVP by: {rsvp_by}</p>\r\n\t\t\t<p>Notes: {notes}</p>\r\n\t\t\t<p><ShowPlayers players={players} /></p>\r\n\t\t\t<Button className={\"btn\"} onClick={() => setShowJoin(!showJoin)}>\r\n\t\t\t  {showJoin ? \"Cancel\" : \"Join Session\"}\r\n\t\t\t</Button>\r\n\t\t\t<Button className={\"btn\"} onClick={() => setShowEdit(!showEdit)}>\r\n\t\t\t  {showEdit ? \"Collapse\" : \"Edit Session\"}\r\n\t\t\t</Button>\r\n\t\t</Collapsible>\r\n      </div>\r\n\t  <JoinExtended showJoin={showJoin} />\r\n      <SessionExtended {...session} showEdit={showEdit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShowPlayers(props) {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"All Players\">\r\n\t\t\t<p>Current players:</p>\r\n\t\t\t<script>\r\n\t\t\t\tprops.players.forEach(element => document.write(element));\r\n\t\t\t</script>\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t);\r\n}\r\n\t\r\n\r\nfunction JoinExtended(props) {\r\n\r\n\tconst { id, showJoin } = props;\r\n\tconst [user, setUser] = useState(\"\");\r\n\t\r\n\tfunction onSubmit() {\r\n\t\tjoinSession(id, user);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={`join-expand ${showJoin ? \"show\" : \"\"}`}>\r\n\t\t\t<form>\r\n\t\t\t\t<input\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  placeholder=\"Your username\"\r\n\t\t\t\t  name=\"user\"\r\n\t\t\t\t  value={user}\r\n\t\t\t\t  onChange={event => {\r\n\t\t\t\t\t setUser(event.target.value);\r\n\t\t\t\t  }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button className={\"btn-warning\"} onClick={onSubmit}>\r\n\t\t\t\t  Join\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nfunction SessionExtended(props) {\r\n\tconst { id, host, game, start_time, session_location, max_playercount, rsvp_by, notes, showEdit } = props;\r\n\r\n\tconst [host_input, setHost] = useState(host);\r\n\tconst [game_input, setGame] = useState(game);\r\n\tconst [start_time_input, setTime] = useState(start_time);\r\n\tconst [session_location_input, setLocation] = useState(session_location);\r\n\tconst [max_playercount_input, setMaxPlayers] = useState(max_playercount);\r\n\tconst [rsvp_by_input, setRSVP] = useState(rsvp_by);\r\n\tconst [notes_input, setNotes] = useState(notes);\r\n\r\n\tfunction onSubmit() {\r\n\t// call upate session function\r\n\teditSession({\r\n\t\thost: host_input,\r\n\t\tstart_time: start_time_input,\r\n\t\tsession_location: session_location_input,\r\n\t\tgame: game_input,\r\n\t\tmax_playercount: max_playercount_input,\r\n\t\trsvp_by: rsvp_by_input,\r\n\t\tnotes: notes_input\r\n\t});\r\n\t}\r\n\r\n  return (\r\n    <div className={`session-expand ${showEdit ? \"show\" : \"\"}`}>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Host username\"\r\n          name=\"host\"\r\n          value={host_input}\r\n          onChange={event => {\r\n             setHost(event.target.value);\r\n          }}\r\n        /><br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Game\"\r\n          name=\"game\"\r\n          value={game_input}\r\n          onChange={event => {\r\n             setGame(event.target.value);\r\n          }}\r\n        />\r\n\t\t<input\r\n          type=\"number\"\r\n          placeholder=\"Max player count\"\r\n          name=\"max_playercount\"\r\n          value={max_playercount_input}\r\n          onChange={event => {\r\n             setMaxPlayers(event.target.value);\r\n          }}\r\n        /><br />\r\n        <input\r\n          type=\"datetime-local\"\r\n          placeholder=\"Scheduled date and time\"\r\n          name=\"start_time\"\r\n          value={start_time_input}\r\n          onChange={event => {\r\n             setTime(event.target.value);\r\n          }}\r\n        /><br />\r\n\t\t<input\r\n          type=\"text\"\r\n          placeholder=\"Venue\"\r\n          name=\"session_location\"\r\n          value={session_location_input}\r\n          onChange={event => {\r\n             setLocation(event.target.value);\r\n          }}\r\n        /><br />\r\n\t\t<input\r\n          type=\"text\"\r\n          placeholder=\"RSVP-by date\"\r\n          name=\"rsvp_by\"\r\n          value={rsvp_by_input}\r\n          onChange={event => {\r\n             setRSVP(event.target.value);\r\n          }}\r\n        /><br />\r\n\t\t<textarea\r\n          placeholder=\"Additional notes\"\r\n          name=\"notes\"\r\n\t\t  rows=\"5\" \r\n\t\t  cols=\"33\"\r\n          value={notes_input}\r\n          onChange={event => {\r\n             setNotes(event.target.value);\r\n          }}\r\n\t\t></textarea><br />\r\n        <Button className={\"btn-warning\"} onClick={onSubmit}>\r\n          Edit\r\n        </Button>\r\n      </form><br />\r\n      <Button className={\"btn-danger\"} onClick={() => cancelSession(id)}>\r\n        Cancel session\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Users from \"./pages/Users\";\r\nimport Games from \"./pages/Games\";\r\nimport Matchmakings from \"./pages/Matchmakings\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n\t<Router>\r\n\t\t<div className=\"App\">\r\n\t\t\t<Nav />\r\n\t\t\t<Header />\r\n\t\t\t{/* the content */}\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t\t\r\n\t\t\t\t<Route path=\"/users\">\r\n\t\t\t\t\t<Users />\r\n\t\t\t\t</Route>\t\t\t\r\n\r\n\t\t\t\t<Route path=\"/games\">\r\n\t\t\t\t\t<Games />\r\n\t\t\t\t</Route>\r\n\t\t\t\t\r\n\t\t\t\t<Route path=\"/sessions\">\r\n\t\t\t\t\t<Matchmakings />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t</Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nexport function display() {\r\n\tconst rootElement = document.getElementById(\"root\");\r\n\tReactDOM.render(<App />, rootElement);\r\n}\r\n"],"sourceRoot":""}